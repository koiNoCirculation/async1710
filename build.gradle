buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = 'sponge'
            url = 'https://repo.spongepowered.org/maven'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'
apply plugin: 'idea'

sourceCompatibility = targetCompatibility = 1.8

version = mod_version
group= mod_group
archivesBaseName = mod_id

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "run"
    mappings = 'stable_12'
}

def refMap = "${tasks.compileJava.temporaryDir}" + File.separator + "mixins.${archivesBaseName}.refmap.json"
def mixinSrg = "${tasks.reobf.temporaryDir}" + File.separator + "mixins.srg"
afterEvaluate {
    tasks.compileJava.options.compilerArgs += ["-AreobfSrgFile=${tasks.reobf.srg}", "-AoutSrgFile=${mixinSrg}", "-AoutRefMapFile=${refMap}"]
}

reobf {
    addExtraSrgFile mixinSrg
}

repositories {
    jcenter()
    maven {
        name = 'sponge'
        url = 'https://repo.spongepowered.org/maven'
    }
    maven {
        name = 'aliyun'
        url = 'https://maven.aliyun.com/repository/central'
    }
}

configurations {
    shade
    compile.extendsFrom shade
}

dependencies {
    shade 'org.spongepowered:mixin:0.7.11-SNAPSHOT'
    // https://mvnrepository.com/artifact/org.ow2.asm/asm-debug-all
    compile group: 'org.ow2.asm', name: 'asm-debug-all', version: '5.2'
    // https://mvnrepository.com/artifact/it.unimi.dsi/fastutil
    compile group: 'it.unimi.dsi', name: 'fastutil', version: '8.4.4'

    // https://mvnrepository.com/artifact/io.micrometer/micrometer-core
    compile group: 'io.micrometer', name: 'micrometer-core', version: '1.6.3'

    compile 'io.micrometer:micrometer-registry-prometheus:latest.release'

    compileOnly files('libs/EnderIO-1.7.10-2.3.1.16-dev.jar',
            'libs/EnderCore-1.7.10-1.7.10-0.2.0.35_beta-dev.jar')
}

jar {
    from sourceSets.main.output

    configurations.shade.copyRecursive().setTransitive(false).each { artifact ->
        from (zipTree(artifact))
    }
    from refMap
    manifest.attributes(
            'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
            'MixinConfigs': "mixins.${mod_id}.json",
            'FMLCorePluginContainsFMLMod': 'true',
            "MixinCompatibilityLevel": "JAVA_8"
    )

}

reobf {
    addExtraSrgFile mixinSrg
}

processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version':project.version, 'mcversion':project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }